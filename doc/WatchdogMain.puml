@startuml
class WatchdogMain

class Watchdog {
-bool m_Running
-bool m_AutoScan
-bool m_Verbose
-milliseconds m_ScanPeriod
-function m_Callback

+Watchdog( scanPeriod, autoScan, verbose)
+void setCallback( function)
+void setPolicy( policy)
+void monitor()
+void quiesce()

-void scanHeartbeats()
-void doCallbacks( actualName, processID, threadID, event, hbLength)
}

class WatchdogEvent {
+WatchdogEvent(actualName, processID, threadID, hbEvent, hbLength, info)
+string processName()
+string threadName()
+pid_t processID()
+pid_t threadID()
+HeartbeatEvent hbEvent()
+milliseconds hbLength()
+int info()
-string m_ProcessName
-string m_ThreadName
-pid_t m_ProcessID
-pid_t m_ThreadID
-HeartbeatEvent m_HBEvent
-milliseconds m_HBLength
-int m_Info
}

class IWatchdogPolicy {
#string m_ProcessName
+IWatchdogPolicy( processName)
+string processName()
+void handleEvent( event, verbose)
}

class ThreadyMainWatchdogPolicy {
+ThreadyMainWatchdogPolicy()
+void handleEvent( event, verbose)
}

class EKG {
-string m_ActualName
-string m_UserName
-pid_t m_ProcessID
-pid_t m_ThreadID
-mapped_region m_Region

+EKG( actualName)
+bool isAlive()
+bool isNormal()
+milliseconds length()
+string actualName()
+milliseconds normalLimit()
+pid_t processID()
+pid_t threadID()
}

class Heartbeat {
+milliseconds m_NormalLimit
+milliseconds m_AbsoluteLimit
+TTickCount m_Beat

+void SetCRC( heartbeat)
+bool isCRCOK( heartbeat)
+string makeActualName( processName, threadName)
+string extractProcessName( actualName)
+string extractThreadName( actualName)
+pid_t extractProcessID( actualName)
+pid_t extractThreadID( actualName)
+bool isHeartbeat( name)
+utin32)t calcCRC( heartbeat)
+TTickCount tickCountNow()
}

class SharedMemory {
-mapped_region m_Region
+SharedMemory( name)
+read( dest, numBytes)
+remove( name)
}

WatchdogMain "1" *-- "1" Watchdog
Watchdog "1" *-- "n" EKG
Watchdog "1" *-- "n" WatchdogEvent
Watchdog "1" *-- "1" SharedMemory
EKG "1" *-- "1" Heartbeat
EKG "1" *-- "1" SharedMemory
IWatchdogPolicy *-- WatchdogEvent
ThreadyMainWatchdogPolicy *-- WatchdogEvent
IWatchdogPolicy <|-- ThreadyMainWatchdogPolicy
WatchdogMain *-- ThreadyMainWatchdogPolicy
@enduml-->
